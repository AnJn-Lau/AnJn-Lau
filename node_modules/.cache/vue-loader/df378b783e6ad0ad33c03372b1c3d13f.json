{"remainingRequest":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\src\\views\\components\\chart\\lineChart.vue?vue&type=style&index=0&id=634333fa&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\src\\views\\components\\chart\\lineChart.vue","mtime":1644565987741},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm9wV2FycHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgbGVmdDogMDsKICB0b3A6MDsKICB6LWluZGV4OiAxMDA7Cn0KLm9wTGluZUJveHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgYm9yZGVyOjFweCBzb2xpZCAjZGZkZmRmOwogIGhlaWdodDogMjZweDsKICBwYWRkaW5nOiAwIDEycHg7CiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKICBsaW5lLWhlaWdodDogMjhweDsKICBtYXJnaW4tbGVmdDogMTBweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIC9kZWVwLyAuZWwtY2hlY2tib3h7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAmOmFmdGVyewogICAgICBjb250ZW50OiAnJzsKICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIHdpZHRoOiAxcHg7CiAgICAgIGhlaWdodDogMTZweDsKICAgICAgYmFja2dyb3VuZDogI2U5ZTllOTsKICAgICAgcmlnaHQ6IC0xNXB4OwogICAgICB0b3A6NXB4OwogICAgfQogICAgJjpsYXN0LWNoaWxkewogICAgICAmOmFmdGVyewogICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICAgIH0KICAgIH0KICB9CiAgJjphZnRlcnsKICAgIGNvbnRlbnQ6ICcnOwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgd2lkdGg6IDFweDsKICAgIGhlaWdodDogMTZweDsKICAgIGJhY2tncm91bmQ6ICNlOWU5ZTk7CiAgICByaWdodDogLTE1cHg7CiAgICB0b3A6NXB4OwogIH0KfQo="},{"version":3,"sources":["lineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lineChart.vue","sourceRoot":"src/views/components/chart","sourcesContent":["<template>\n  <div class=\"pr\">\n    <div ref=\"chart\" :style=\"{height:height}\"/>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nrequire('./chartTheme') // echarts theme\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    data: {\n      type: Object,\n      default: () => {\n        return {}\n      }\n    },\n    height: {\n      type: String,\n      default: '380px'\n    }\n  },\n  data () {\n    return {\n      chart: null,\n      times: null,\n      flage: 0\n    }\n  },\n  watch: {\n    data: {\n      deep: true,\n      handler (val) {\n        setTimeout(() => this.setOptions(this.data), 4000)\n      }\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n    var _this = this\n    window.addEventListener('resize', function () {\n      if (_this.chart) {\n        _this.resizeTimer = setTimeout(function () {\n          _this.chart.resize()\n        }, 100)\n      }\n    })\n  },\n  beforeDestroy () {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n    clearInterval(this.times)\n  },\n  methods: {\n    /**\n     * 十六进制颜色转换为带透明度的颜色\n     * @param _color 十六进制颜色\n     * @param _opactity 透明度\n     * @returns {string} rgba\n     */\n    hexToRGBA (_color, _opacity) {\n      let sColor = _color.toLowerCase()\n      // 十六进制颜色值的正则表达式\n      const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\n      // 如果是16进制颜色\n      if (sColor && reg.test(sColor)) {\n        if (sColor.length === 4) {\n          let sColorNew = '#'\n          for (let i = 1; i < 4; i += 1) {\n            sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\n          }\n          sColor = sColorNew\n        }\n        // 处理六位的颜色值\n        const sColorChange = []\n        for (let i = 1; i < 7; i += 2) {\n          sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)))\n        }\n        return 'rgba(' + sColorChange.join(',') + ',' + _opacity + ')'\n      }\n      return sColor\n    },\n    initChart () {\n      this.chart = echarts.init(this.$refs.chart, 'customed')\n      this.setOptions(this.data)\n    },\n    setOptions (data) {\n      const legendData = []\n      const seriesData = []\n      const yAxis = []\n      const dataZoom = []\n      const grid = {}\n      const _this = this\n      let legendOP = {}\n      if (!data) {\n        return\n      }\n      data.data.forEach(function (item) {\n          legendData.push(item.name)\n        \n\n        if (item.type === 'line' && item.lineStyle) {\n          seriesData.push({\n            name: item.name,\n            yAxisIndex: item.yIndex,\n            symbolSize: item.symbolSize,\n            symbol: 'emptyCircle',\n            itemStyle: {\n              normal: {\n                // 拐点上显示数值\n                label: {\n                  show: true,\n                  textStyle: {\n                    fontSize: 13, // 字体大小\n                    color: '#ffffff'// 字体颜色\n                  }\n                },\n\n                color: _this.hexToRGBA(item.color[0], 1),\n                shadowBlur: 10,\n                shadowColor: _this.hexToRGBA(item.color[0], 1),\n                opacity: 1,\n\n                // borderColor: 'red', // 拐点边框颜色\n                lineStyle: {\n                  // width: 5, // 设置线宽\n                  type: item.lineStyle // 'dotted'虚线 'solid'实线\n                }\n              }\n            },\n            emphasis: {\n              itemStyle: {\n                opacity: 1\n              }\n            },\n            lineStyle: {\n              color: {\n                type: 'linear',\n                x: 0,\n                y: 0,\n                x2: 0,\n                y2: 1,\n                colorStops: [{\n                  offset: 0, color: item.color[0] // 0% 处的颜色\n                }, {\n                  offset: 1, color: item.color[1] // 100% 处的颜色\n                }],\n                global: false // 缺省为 false\n              },\n              width: 2,\n              type: item.lineStyle\n            },\n            areaStyle: {\n              color: {\n                type: 'linear',\n                x: 0,\n                y: 0,\n                x2: 0,\n                y2: 1,\n                colorStops: [{\n                  offset: 0, color: item.areaColor[0] // 0% 处的颜色\n                }, {\n                  offset: 1, color: item.areaColor[1] // 100% 处的颜色\n                }],\n                global: false // 缺省为 false\n              }\n            },\n            smooth: false,\n            type: 'line',\n            data: item.value\n          })\n        } else if (item.type === 'bar') {\n          seriesData.push(\n            {\n              name: item.name,\n              yAxisIndex: item.yIndex,\n              barMaxWidth: item.barWidth,\n              itemStyle: {\n                color: {\n                  type: 'linear',\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [{\n                    offset: 0, color: item.color[0] // 0% 处的颜色\n                  }, {\n                    offset: 1, color: item.color[1] // 100% 处的颜色\n                  }],\n                  global: false // 缺省为 false\n                },\n                opacity: '1'\n              },\n              type: 'bar',\n              data: item.value\n            }\n          )\n          if (data.data[0].value.length > 10) {\n            dataZoom.push({\n              type: 'inside',\n              show: true,\n              bottom: 20,\n              xAxisIndex: [0],\n              start: 0,\n              end: 50,\n              height: 8,\n              handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\n              handleSize: '110%',\n              handleStyle: {\n                color: '#d3dee5'\n              },\n              textStyle: { color: '#fff' },\n              borderColor: '#90979c'\n            })\n          }\n        }\n      })\n      data.unit.forEach(function (item) {\n        yAxis.push({\n          min: item.min,\n          minInterval: item.minInterval,\n          max: item.max,\n          show: true,\n          name: item.name,\n          nameGap: 15,\n          position: item.position,\n          splitNumber: 4,\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            show: true\n          }\n        })\n      })\n      grid.left = 10\n      grid.right = 10\n      grid.bottom = 0\n      grid.top = data.title === '' ? 35 : 65\n      grid.containLabel = true\n      legendOP = {\n        data: legendData,\n        right: '0',\n        top: data.title === '' ? 0 : 30,\n        itemWidth: 16,\n        itemHeight: 8,\n        width: '100%'\n      }\n      var option = {\n        title: {\n          show: data.title !== '',\n          text: data.title,\n          left: 'center',\n          top: 0,\n          textStyle: {\n            fontSize: 16,\n            color: '#beeaff'\n          }\n        },\n        xAxis: {\n          data: data.xData,\n          boundaryGap: false,\n          axisLabel: {\n            rotate: 50,\n            textStyle: {\n              color: '#FFFFFF'\n            }\n          }\n        },\n        dataZoom: dataZoom,\n        grid: grid,\n        tooltip: {\n          trigger: 'axis',\n          formatter: function (params, ticket, callback) {\n            var htmlStr = ''\n            var valMap = {}\n            for (var i = 0;i < params.length;i++) {\n              var param = params[i]\n              var xName = param.name// x轴的名称\n              var seriesName = param.seriesName// 图例名称\n              var value = param.value// y轴值\n              var color = param.color// 图例颜色\n\n              // 过滤无效值\n              if (value === '-') {\n                continue\n              }\n\n              // 过滤重叠值\n              if (valMap[seriesName] === value) {\n                continue\n              }\n\n              if (i === 0) {\n                htmlStr += xName + '<br/>'// x轴的名称\n              }\n              htmlStr += '<div>'\n              // 为了保证和原来的效果一样，这里自己实现了一个点的效果\n              htmlStr += '<span style=\"margin-right:5px;display:inline-block;width:10px;height:10px;border-radius:5px;background-color:' + color + ';\"></span>'\n\n              // 圆点后面显示的文本\n              htmlStr += seriesName + '：' + value\n\n              htmlStr += '</div>'\n              valMap[seriesName] = value\n            }\n            return htmlStr\n          }\n        },\n        graphic: {\n          elements: [\n            {\n              type: 'image',\n              left: 40,\n              right: 0,\n              bottom: 20,\n              silent: true,\n              style: {\n                image: require('@/assets/lineChartBg.svg'),\n                height: data.barBgWidth ? data.barBgWidth : 33\n              }\n            }\n          ]\n        },\n        yAxis: yAxis,\n        legend: legendOP,\n        series: seriesData\n      }\n      this.chart.setOption(option)\n      if (data.data[0].value.length > 10 && this.flage === 0) {\n        this.flage++\n        this.times = setInterval(() => {\n          // 每次向后滚动一个，最后一个从头开始。\n          if (option.dataZoom[0].end >= 100) {\n            option.dataZoom[0].end = 50\n            option.dataZoom[0].start = 0\n          } else {\n            option.dataZoom[0].end = option.dataZoom[0].end + parseInt(100 / data.data[0].value.length)\n            option.dataZoom[0].start = option.dataZoom[0].start + parseInt(100 / data.data[0].value.length)\n          }\n          this.chart.setOption(option)\n        }, 5000)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.opWarp{\n  position: absolute;\n  left: 0;\n  top:0;\n  z-index: 100;\n}\n.opLineBox{\n  display: inline-block;\n  border:1px solid #dfdfdf;\n  height: 26px;\n  padding: 0 12px;\n  vertical-align: middle;\n  line-height: 28px;\n  margin-left: 10px;\n  border-radius: 4px;\n  position: relative;\n  /deep/ .el-checkbox{\n    position: relative;\n    &:after{\n      content: '';\n      display: inline-block;\n      position: absolute;\n      width: 1px;\n      height: 16px;\n      background: #e9e9e9;\n      right: -15px;\n      top:5px;\n    }\n    &:last-child{\n      &:after{\n        display: none;\n      }\n    }\n  }\n  &:after{\n    content: '';\n    display: inline-block;\n    position: absolute;\n    width: 1px;\n    height: 16px;\n    background: #e9e9e9;\n    right: -15px;\n    top:5px;\n  }\n}\n</style>\n"]}]}