{"remainingRequest":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\src\\views\\components\\chart\\map.vue?vue&type=style&index=0&id=56ea620c&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\src\\views\\components\\chart\\map.vue","mtime":1644572312807},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\17239\\Desktop\\新疆移动网优大屏项目\\page0119\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxlZ2VuZE9wewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICByaWdodDogMDsKICBib3R0b206IDA7CiAgZm9udC1zaXplOiAxMnB4OwogIGNvbG9yOiAjYmVlYWZmOwogIGxpbmUtaGVpZ2h0OiAyNHB4OwogIGJhY2tncm91bmQ6IHVybCgiLi4vLi4vLi4vYXNzZXRzL2xlZ2VuZEJnLnBuZyIpIG5vLXJlcGVhdDsKICB3aWR0aDogMTUwcHg7CiAgaGVpZ2h0OiAyMTBweDsKICAuaWNvbnsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHdpZHRoOiAxNXB4OwogICAgaGVpZ2h0OiA5cHg7CiAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICBiYWNrZ3JvdW5kOiAjZjAwOwogICAgbWFyZ2luLXJpZ2h0OiA4cHg7CiAgICBtYXJnaW4tbGVmdDogNHB4OwogIH0KICAud2FybmluZ3sKICAgIC8qIFBlcm1hbGluayAtIHVzZSB0byBlZGl0IGFuZCBzaGFyZSB0aGlzIGdyYWRpZW50OiBodHRwczovL2NvbG9yemlsbGEuY29tL2dyYWRpZW50LWVkaXRvci8jZjc5ZjA0KzAsODI1ODNjKzEwMCAqLwogICAgYmFja2dyb3VuZDogcmdiKDI0NywxNTksNCk7IC8qIE9sZCBicm93c2VycyAqLwogICAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAgcmdiYSgyNDcsMTU5LDQsMSkgMCUsIHJnYmEoMTMwLDg4LDYwLDEpIDEwMCUpOyAvKiBGRjMuNi0xNSAqLwogICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAgcmdiYSgyNDcsMTU5LDQsMSkgMCUscmdiYSgxMzAsODgsNjAsMSkgMTAwJSk7IC8qIENocm9tZTEwLTI1LFNhZmFyaTUuMS02ICovCiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAgcmdiYSgyNDcsMTU5LDQsMSkgMCUscmdiYSgxMzAsODgsNjAsMSkgMTAwJSk7IC8qIFczQywgSUUxMCssIEZGMTYrLCBDaHJvbWUyNissIE9wZXJhMTIrLCBTYWZhcmk3KyAqLwogICAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoIHN0YXJ0Q29sb3JzdHI9JyNmNzlmMDQnLCBlbmRDb2xvcnN0cj0nIzgyNTgzYycsR3JhZGllbnRUeXBlPTAgKTsgLyogSUU2LTkgKi8KICB9CiAgLmluZm97CiAgICAvKiBQZXJtYWxpbmsgLSB1c2UgdG8gZWRpdCBhbmQgc2hhcmUgdGhpcyBncmFkaWVudDogaHR0cHM6Ly9jb2xvcnppbGxhLmNvbS9ncmFkaWVudC1lZGl0b3IvIzAwZmZlZCswLDNmOTJmZisxMDAgKi8KICAgIGJhY2tncm91bmQ6IHJnYigwLDI1NSwyMzcpOyAvKiBPbGQgYnJvd3NlcnMgKi8KICAgIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgIHJnYmEoMCwyNTUsMjM3LDEpIDAlLCByZ2JhKDYzLDE0NiwyNTUsMSkgMTAwJSk7IC8qIEZGMy42LTE1ICovCiAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICByZ2JhKDAsMjU1LDIzNywxKSAwJSxyZ2JhKDYzLDE0NiwyNTUsMSkgMTAwJSk7IC8qIENocm9tZTEwLTI1LFNhZmFyaTUuMS02ICovCiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAgcmdiYSgwLDI1NSwyMzcsMSkgMCUscmdiYSg2MywxNDYsMjU1LDEpIDEwMCUpOyAvKiBXM0MsIElFMTArLCBGRjE2KywgQ2hyb21lMjYrLCBPcGVyYTEyKywgU2FmYXJpNysgKi8KICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KCBzdGFydENvbG9yc3RyPScjMDBmZmVkJywgZW5kQ29sb3JzdHI9JyMzZjkyZmYnLEdyYWRpZW50VHlwZT0wICk7IC8qIElFNi05ICovCiAgfQp9Cg=="},{"version":3,"sources":["map.vue"],"names":[],"mappingslBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"map.vue","sourceRoot":"src/views/components/chart","sourcesContent":["<template>\n  <div class=\"pr\">\n    <div class=\"legendOp\">\n      <div class=\"text-center mt-5\">问题小区占比(%)</div>\n      <div class=\"pl-16\">\n        <div><i class=\"icon warning\"></i>5G问题小区</div>\n        <div><i class=\"icon info\"></i>4G问题小区</div>\n      </div>\n\n    </div>\n    <div ref=\"chart\" :style=\"{height:height}\"/>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport JSON from './map_xinjiang.json'\nimport JSONLine from './xinjiangLine.json'\n\nexport default {\n  name: 'Home',\n  props: {\n    data: {\n      type: Object,\n      default: () => {\n        return {\n          legendList: ['5G问题小区占比', '4G问题小区占比'],\n          data: [\n            {\n              name: '和田',\n              value: [426, 124]\n            },\n            {\n              name: '巴音郭楞蒙古自治州',\n              value: [426, 124]\n            },\n            {\n              name: '喀什地区',\n              value: [432, 124]\n            },\n            {\n              name: '克孜勒苏柯尔克孜自治州',\n              value: [430, 124]\n            },\n            {\n              name: '阿克苏地区',\n              value: [564, 124]\n            },\n            {\n              name: '吐鲁番市',\n              value: [420, 124]\n            },\n            {\n              name: '乌鲁木齐市',\n              value: [667, 124]\n            },\n            {\n              name: '哈密市',\n              value: [487, 124]\n            },\n            {\n              name: '伊犁哈萨克自治州',\n              value: [426, 124]\n            },\n            {\n              name: '昌吉回族自治州',\n              value: [426, 124]\n            },\n            {\n              name: '克拉玛依市',\n              value: [426, 124]\n            },\n            {\n              name: '博尔塔拉蒙古自治州',\n              value: [426, 124]\n            },\n            {\n              name: '塔城地区',\n              value: [426, 124]\n            },\n            {\n              name: '阿勒泰地区',\n              value: [426, 124]\n            }\n          ]\n        }\n      }\n    },\n    height: {\n      type: String,\n      default: '600px'\n    }\n  },\n  data () {\n    return {\n      chart: null,\n      geoCoordMap: {}\n    }\n  },\n  watch: {\n    data: {\n      deep: true,\n      handler (val) {\n        this.setOptions(val)\n      }\n    }\n  },\n  mounted () {\n    // this.getData()\n    this.$nextTick(() => {\n      this.initChart()\n    })\n    var _this = this\n    window.addEventListener('resize', function () {\n      if (_this.chart) {\n        _this.resizeTimer = setTimeout(function () {\n          // _this.chart.resize()\n        }, 100)\n      }\n    })\n  },\n  beforeDestroy () {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    /**\n     * 十六进制颜色转换为带透明度的颜色\n     * @param _color 十六进制颜色\n     * @param _opactity 透明度\n     * @returns {string} rgba\n     */\n    hexToRGBA (_color, _opacity) {\n      let sColor = _color.toLowerCase()\n      // 十六进制颜色值的正则表达式\n      const reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\n      // 如果是16进制颜色\n      if (sColor && reg.test(sColor)) {\n        if (sColor.length === 4) {\n          let sColorNew = '#'\n          for (let i = 1; i < 4; i += 1) {\n            sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\n          }\n          sColor = sColorNew\n        }\n        // 处理六位的颜色值\n        const sColorChange = []\n        for (let i = 1; i < 7; i += 2) {\n          sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)))\n        }\n        return 'rgba(' + sColorChange.join(',') + ',' + _opacity + ')'\n      }\n      return sColor\n    },\n    initChart () {\n      this.chart = echarts.init(this.$refs.chart)\n      this.setOptions(this.data)\n    },\n    formatData (data) {\n      var data1 = []\n      data.forEach(function (item, i) {\n        data1 = []\n        data1.push({\n          name: item.name,\n          value: item.value[0]\n        })\n      })\n      return { data1 }\n    },\n    initBar (data) {\n      var max = 100\n      var _this = this\n      if (!_this.chart) return\n      var option = {\n        xAxis: [],\n        yAxis: [],\n        grid: [],\n        series: _this.chart.getOption().series\n      }\n      data.forEach(function (item) {\n        if (item.value[0] > max) {\n          max = item.value[0]\n        }\n      })\n      echarts.util.each(data, function (dataItem, idx) {\n        var geoCoord = _this.geoCoordMap[data[idx].name]\n        var coord = _this.chart.convertToPixel('geo', geoCoord)\n        idx += ''\n        option.xAxis.push({\n          id: idx,\n          gridId: idx,\n          type: 'category',\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            show: false\n          },\n          axisLine: {\n            onZero: false,\n            show: false,\n            lineStyle: {\n              color: '#666'\n            }\n          },\n          // data: xAxisCategory,\n          data: ['站址总数'],\n          zlevel: 100\n        })\n        option.yAxis.push({\n          id: idx,\n          gridId: idx,\n          max: max,\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            show: false\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#1C70B6'\n            }\n          },\n          zlevel: 100\n        })\n        option.grid.push({\n          id: idx,\n          width: 100,\n          height: 80,\n          left: coord[0] - 50,\n          top: coord[1] - 80,\n          zlevel: 100\n        })\n        option.series.push(\n          {\n            id: idx,\n            type: 'bar',\n            name: dataItem.name,\n            xAxisId: idx,\n            yAxisId: idx,\n            barWidth: 8,\n            label: {\n              show: true,\n              position: 'top',\n              offset: [0, 0],\n              fontSize: 20,\n              fontFamily: 'Agency-fb-bold'\n            },\n            barGap: '30%',\n            data: [\n              {\n                name: '5G问题小区',\n                value: dataItem.value[1],\n                itemStyle: {\n                  color: {\n                    type: 'linear',\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    colorStops: [{\n                      offset: 0,\n                      color: '#fad55f' // 0% 处的颜色\n                    }, {\n                      offset: 1,\n                      color: '#f7701f' // 0% 处的颜色\n                    }],\n                    global: false // 缺省为 false\n                  },\n                  borderRadius: 2\n                },\n                label: {\n                  color: '#F38D36',\n                  fontSize: 20,\n                  fontWeight: 'bolder'\n                }\n              }\n            ],\n            zlevel: 9\n          },\n          {\n            id: idx + dataItem.name,\n            type: 'bar',\n            name: dataItem.name,\n            xAxisId: idx,\n            yAxisId: idx,\n            barWidth: 8,\n            label: {\n              show: true,\n              position: 'top',\n              offset: [0, 0],\n              fontSize: 20,\n              fontFamily: 'Agency-fb-bold'\n            },\n            barGap: '30%',\n            data: [\n              {\n                name: '4G问题小区',\n                value: dataItem.value[0],\n                itemStyle: {\n                  color: {\n                    type: 'linear',\n                    x: 0,\n                    y: 0,\n                    x2: 0,\n                    y2: 1,\n                    colorStops: [{\n                      offset: 0,\n                      color: '#00ffed' // 0% 处的颜色\n                    }, {\n                      offset: 1,\n                      color: '#3f92ff' // 0% 处的颜色\n                    }],\n                    global: false // 缺省为 false\n                  },\n                  borderRadius: 2\n                },\n                label: {\n                  color: '#00DCff',\n                  fontSize: 20,\n                  fontWeight: 'bolder'\n                }\n              }\n            ],\n            zlevel: 9\n          }\n        )\n      })\n      return option\n    },\n    setOptions (data) {\n      var _this = this\n      echarts.registerMap('map', JSON)\n      echarts.registerMap('mapLine', JSONLine)\n      _this.chart.hideLoading()\n      const geoCoordMap = {}\n      const mapFeatures = echarts.getMap('map').geoJson.features\n      mapFeatures.forEach(function (v) {\n        // 地区名称\n        var name = v.properties.name\n        // 地区经纬度\n        geoCoordMap[name] = v.properties.cp\n      })\n      this.geoCoordMap = geoCoordMap\n      const bgGeo = []\n      var convertData = function (data) {\n        var res = []\n        for (var i = 0; i < data.length; i++) {\n          var geoCoord = geoCoordMap[data[i].name]\n          if (geoCoord) {\n            res.push({\n              name: data[i].name,\n              value: geoCoord.concat(data[i].totalP + '%')\n            })\n          }\n        }\n        return res\n      }\n      for (var i = 0; i < 15; i++) {\n        bgGeo.push(\n          {\n            map: 'mapLine',\n            name: '背景色' + 'i',\n            aspectScale: 1,\n            zoom: 1.2,\n            itemStyle: {\n              areaColor: 'rgba(0,0,0,0)',\n              borderWidth: 1,\n              borderColor: '#001558',\n              shadowBlur: 2,\n              // shadowColor: 'rgba(' + (82 + (5 * i)) + ',' + (163 + (5 * i)) + ',' + (248 + i / 2) + ',1)',\n              shadowColor: 'rgba(0,21,88,' + (1 - 0 * i) + ')',\n              shadowOffsetX: 0,\n              shadowOffsetY: 2 * i,\n              opacity: 1\n            },\n            silent: true,\n            zlevel: 1\n          }\n        )\n      }\n      var option = {\n        tooltip: {\n        },\n        geo: [\n          {\n            show: true,\n            map: 'map',\n            aspectScale: 1,\n            zoom: 1.2,\n            silent: true,\n            itemStyle: {\n              areaColor: 'rgba(0,0,0,0)',\n              borderWidth: 1,\n              borderColor: '#0c58b2',\n              opacity: 1\n            },\n            zlevel: 2\n          },\n          {\n            show: true,\n            map: 'mapLine',\n            aspectScale: 1,\n            zoom: 1.2,\n            silent: true,\n            itemStyle: {\n              areaColor: {\n                type: 'linear',\n                x: 0,\n                y: 0,\n                x2: 1,\n                y2: 1,\n                colorStops: [{\n                  offset: 0, color: 'rgba(53,122,193,.8)' // 0% 处的颜色\n                }, {\n                  offset: 1, color: 'rgba(8,49,128,.3)' // 100% 处的颜色\n                }],\n                global: false // 缺省为 false\n              },\n              borderWidth: 2,\n              borderColor: '#17DBFF',\n              opacity: 1\n            },\n            zlevel: 1\n          },\n          ...bgGeo\n        ],\n        visualMap: {\n          show: true,\n          type: 'piecewise',\n          right: 55,\n          bottom: 8,\n          max: 100,\n          seriesIndex: [0],\n          align: 'left',\n          inRange: {\n            color: ['#A5DCF4', '#006edd']\n          },\n          textStyle: {\n            color: '#beeaff'\n          },\n          pieces: [{\n            min: data.stage[0].min,\n            max: data.stage[0].max,\n            label: data.stage[0].label,\n            color: new echarts.graphic.LinearGradient(\n              0, 1, 0, 0,\n              [{\n                offset: 0,\n                color: '#00d233'\n              },\n              {\n                offset: 1,\n                color: '#0c6561'\n              }\n              ]\n            )\n          }, {\n            min: data.stage[1].min,\n            max: data.stage[1].max,\n            label: data.stage[1].label,\n            color: new echarts.graphic.LinearGradient(\n              0, 0, 0, 1,\n              [{\n                offset: 0,\n                color: '#002877'\n              },\n              {\n                offset: 1,\n                color: '#025af8'\n              }\n              ]\n            )\n          }, {\n            min: data.stage[2].min,\n            max: data.stage[2].max,\n            label: data.stage[2].label,\n            color: new echarts.graphic.LinearGradient(\n              0, 1, 0, 0,\n              [{\n                offset: 0,\n                color: '#FFFF00' // 黄色\n              },\n              {\n                offset: 1,\n                color: '#5A5A00'\n              }\n              ]\n            )\n          }, {\n            min: data.stage[3].min,\n            max: data.stage[3].max,\n            label: data.stage[3].label,\n            color: new echarts.graphic.LinearGradient(\n              0, 1, 0, 0,\n              [{\n                offset: 0,\n                color: '#ffa500'\n              },\n              {\n                offset: 1,\n                color: '#8d5d36'\n              }\n              ]\n            )\n          }, {\n            min: data.stage[4].min,\n            max: data.stage[4].max,\n            label: data.stage[4].label,\n            color: new echarts.graphic.LinearGradient(\n              0, 1, 0, 0,\n              [{\n                offset: 0,\n                color: 'rgba(233,70,70,1)'\n              },\n              {\n                offset: 1,\n                color: 'rgba(233,70,70,0.3)'\n              }\n              ]\n            )\n          }]\n        },\n        series: [\n          {\n            type: 'map',\n            mapType: 'map',\n            geoIndex: 0,\n            label: {\n              show: false\n            },\n            data: Object.keys(this.geoCoordMap).map(name => {\n              return {\n                name: name,\n                value: 1\n\n              }\n            })\n          },\n          {\n            name: '问题小区占比',\n            type: 'effectScatter',\n            coordinateSystem: 'geo',\n            data: convertData(data.data),\n            symbolSize: [28, 28],\n            symbol: 'image://' + require('@/assets/mapDot.png'),\n            symbolOffset: [0, 16],\n            zlevel: 101,\n            label: {\n              formatter: '{b}',\n              position: 'bottom',\n              show: true,\n              color: '#fff',\n              fontSize: 16,\n              offset: [0, -8],\n              opacity: 1\n            },\n            itemStyle: {\n              opacity: 1\n            },\n            encode: {\n              tooltip: [2]\n            }\n          }\n        ]\n      }\n      // console.log(data.data)\n      option.series[0].data[0].value = parseFloat(data.data[0].totalP)\n      option.series[0].data[1].value = parseFloat(data.data[1].totalP)\n      // option.series[0].data[2].value = data.data[12] // 塔城\n      option.series[0].data[2].value = parseFloat(data.data[2].totalP)\n      option.series[0].data[3].value = parseFloat(data.data[3].totalP)\n      option.series[0].data[4].value = parseFloat(data.data[4].totalP)\n      option.series[0].data[5].value = parseFloat(data.data[5].totalP)\n      option.series[0].data[6].value = parseFloat(data.data[6].totalP)\n      option.series[0].data[7].value = parseFloat(data.data[7].totalP)\n      option.series[0].data[8].value = parseFloat(data.data[8].totalP)\n      option.series[0].data[9].value = parseFloat(data.data[9].totalP)\n      option.series[0].data[10].value = parseFloat(data.data[10].totalP)\n      option.series[0].data[11].value = parseFloat(data.data[11].totalP)\n      option.series[0].data[12].value = parseFloat(data.data[12].totalP)\n      option.series[0].data[13].value = parseFloat(data.data[13].totalP)\n      option.series[0].data[14].value = parseFloat(data.data[14].totalP)\n      option.series[0].data[15].value = parseFloat(data.data[15].totalP)\n      _this.chart.setOption(option, true)\n      _this.chart.setOption(_this.initBar(data.data))\n    }\n  }\n}\n\n</script>\n<style scoped lang=\"scss\">\n.legendOp{\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  font-size: 12px;\n  color: #beeaff;\n  line-height: 24px;\n  background: url(\"../../../assets/legendBg.png\") no-repeat;\n  width: 150px;\n  height: 210px;\n  .icon{\n    display: inline-block;\n    width: 15px;\n    height: 9px;\n    border-radius: 5px;\n    background: #f00;\n    margin-right: 8px;\n    margin-left: 4px;\n  }\n  .warning{\n    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#f79f04+0,82583c+100 */\n    background: rgb(247,159,4); /* Old browsers */\n    background: -moz-linear-gradient(top,  rgba(247,159,4,1) 0%, rgba(130,88,60,1) 100%); /* FF3.6-15 */\n    background: -webkit-linear-gradient(top,  rgba(247,159,4,1) 0%,rgba(130,88,60,1) 100%); /* Chrome10-25,Safari5.1-6 */\n    background: linear-gradient(to bottom,  rgba(247,159,4,1) 0%,rgba(130,88,60,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f79f04', endColorstr='#82583c',GradientType=0 ); /* IE6-9 */\n  }\n  .info{\n    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#00ffed+0,3f92ff+100 */\n    background: rgb(0,255,237); /* Old browsers */\n    background: -moz-linear-gradient(top,  rgba(0,255,237,1) 0%, rgba(63,146,255,1) 100%); /* FF3.6-15 */\n    background: -webkit-linear-gradient(top,  rgba(0,255,237,1) 0%,rgba(63,146,255,1) 100%); /* Chrome10-25,Safari5.1-6 */\n    background: linear-gradient(to bottom,  rgba(0,255,237,1) 0%,rgba(63,146,255,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffed', endColorstr='#3f92ff',GradientType=0 ); /* IE6-9 */\n  }\n}\n</style>\n"]}]}